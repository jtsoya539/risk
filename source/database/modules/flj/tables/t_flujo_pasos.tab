create table T_FLUJO_PASOS
(
  id_paso               NUMBER generated by default on null as identity(
    minvalue 1
    nomaxvalue
    start with 1
    increment by 1
    nocache
    nocycle
  ),
  id_flujo              NUMBER,
  nombre                VARCHAR2(100),
  tipo                  VARCHAR2(20),
  orden                 NUMBER,
  acciones_posibles     VARCHAR2(100) default '["APROBAR"]' not null,
  bloque_plsql          CLOB,
  roles_responsables    VARCHAR2(4000),
  usuarios_responsables VARCHAR2(4000)
)
;
comment on table T_FLUJO_PASOS
  is 'Definición de Pasos de Flujos';
comment on column T_FLUJO_PASOS.id_paso
  is 'Identificador del paso del flujo';
comment on column T_FLUJO_PASOS.id_flujo
  is 'Identificador del flujo';
comment on column T_FLUJO_PASOS.nombre
  is 'Nombre del paso del flujo';
comment on column T_FLUJO_PASOS.tipo
  is 'Tipo de paso del flujo (INICIO / MANUAL / AUTOMATICO / APROBACION)';
comment on column T_FLUJO_PASOS.orden
  is 'Orden de paso del flujo';
comment on column T_FLUJO_PASOS.acciones_posibles
  is 'Acciones posibles. En formato JSON Array';
comment on column T_FLUJO_PASOS.bloque_plsql
  is 'Bloque PL/SQL del paso. Soporta enlace de variables de instancia con el formato ":variable". Ejemplo: :monto, :id_cliente, etc.';
comment on column T_FLUJO_PASOS.roles_responsables
  is 'Nombre de roles responsables. En formato JSON Array. Soporta variables enlazadas.';
comment on column T_FLUJO_PASOS.usuarios_responsables
  is 'Alias de usuarios responsables. En formato JSON Array. Soporta variables enlazadas. Variables comodín :usuario_ingreso. Ejemplo: [":usuario_ingreso"]';
alter table T_FLUJO_PASOS
  add constraint PK_FLUJO_PASOS primary key (ID_PASO);
alter table T_FLUJO_PASOS
  add constraint FK_FLUJO_PASOS_FLUJOS foreign key (ID_FLUJO)
  references T_FLUJOS (ID_FLUJO);
alter table T_FLUJO_PASOS
  add constraint CK_FLJ_PAS_ACC_POSIBLES_JSON
  check (acciones_posibles IS JSON STRICT WITH UNIQUE KEYS);
alter table T_FLUJO_PASOS
  add constraint CK_FLJ_PAS_ROL_RESPONSABLES_JSON
  check (roles_responsables IS JSON STRICT WITH UNIQUE KEYS);
alter table T_FLUJO_PASOS
  add constraint CK_FLJ_PAS_USU_RESPONSABLES_JSON
  check (usuarios_responsables IS JSON STRICT WITH UNIQUE KEYS);
alter table T_FLUJO_PASOS
  add constraint CK_FLJ_PAS_TIPO
  check (tipo IN ('INICIO', 'MANUAL', 'AUTOMATICO', 'APROBACION'));
alter table T_FLUJO_PASOS
  add constraint CK_FLJ_PAS_TIPO_ACC_POSIBLES
  check ((tipo IN ('INICIO', 'AUTOMATICO') AND acciones_posibles = '["APROBAR"]') OR tipo IN ('MANUAL', 'APROBACION'));
alter table T_FLUJO_PASOS
  add constraint CK_FLJ_PAS_TIPO_APR_ACC_POSIBLES
  check ((tipo IN ('INICIO', 'AUTOMATICO','APROBACION') AND JSON_EXISTS(acciones_posibles, '$[*]?(@ == "APROBAR")')) OR tipo IN ('MANUAL'));
alter table T_FLUJO_PASOS
  add constraint CK_FLJ_PAS_TIPO_APR_RESPONSABLE
  check ((tipo IN ('APROBACION') AND (roles_responsables IS NOT NULL AND usuarios_responsables IS NULL)) OR tipo IN ('INICIO', 'MANUAL', 'AUTOMATICO'));
alter table T_FLUJO_PASOS
  add constraint CK_FLJ_PAS_TIPO_AUTO_RESPONSABLE
  check ((tipo IN ('INICIO', 'AUTOMATICO') AND roles_responsables IS NULL AND usuarios_responsables IS NULL) OR tipo IN ('MANUAL', 'APROBACION'));
